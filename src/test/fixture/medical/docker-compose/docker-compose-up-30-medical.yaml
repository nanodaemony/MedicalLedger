# Configuration of node 30.

version: '2'

# 服务
services:

  # Order结点
  orderer0.medical.com:
    # 容器名称
    container_name: orderer0.medical.com
    image: hyperledger/fabric-orderer
    environment:
      - FABRIC_LOGGING_SPEC=info  # 日志级别
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block    # Order的创世区块
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP   # Orderer的MSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      - ORDERER_GENERAL_TLS_ENABLED=true        # 开启TLS
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key     # TLS私钥
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt    # TLS证书
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]          # TLS根CA
      - ORDERER_KAFKA_RETRY_LONGINTERVAL=10s
      - ORDERER_KAFKA_RETRY_LONGTOTAL=100s
      - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
      - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
      - ORDERER_KAFKA_TOPIC_REPLICATIONFACTOR=3
      - ORDERER_KAFKA_VERBOSE=true
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric    # 工作目录
    command: orderer
    volumes:
      - ./channel-artifacts/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
      - ./crypto-config/ordererOrganizations/medical.com/orderers/orderer0.medical.com/msp:/var/hyperledger/orderer/msp
      - ./crypto-config/ordererOrganizations/medical.com/orderers/orderer0.medical.com/tls/:/var/hyperledger/orderer/tls
      - ./data/orderer0/:/var/hyperledger/production/orderer/
    ports:
      - 7050:7050
    extra_hosts:
      - "kafka0:172.20.29.30"
      - "kafka1:172.20.29.31"
      - "kafka2:172.20.29.32"
      - "kafka3:172.20.29.33"


  # PeerXinQiao(OrgPatient)
  peerxinqiao.orgpatient.medical.com:
    container_name: peerxinqiao.orgpatient.medical.com
    hostname: peerxinqiao.orgpatient.medical.com
    image: hyperledger/fabric-peer
    environment:
      - CORE_PEER_ID=peerxinqiao.orgpatient.medical.com
      - CORE_PEER_ADDRESS=peerxinqiao.orgpatient.medical.com:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peerxinqiao.orgpatient.medical.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peerxinqiao.orgpatient.medical.com:7051
      - CORE_PEER_CHAINCODELISTENADDRESS=peerxinqiao.orgpatient.medical.com:7052
      - CORE_PEER_LOCALMSPID=OrgPatientMSP
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=ERROR
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_ENABLED=true    # Open TLS
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt

      # Couchdb config
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb-xinqiao:5984 # 指定CouchDB的地址及端口号
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    volumes:
      - /var/run/:/host/var/run/
      - ./crypto-config/peerOrganizations/orgpatient.medical.com/peers/peerxinqiao.orgpatient.medical.com/msp:/etc/hyperledger/fabric/msp
      - ./crypto-config/peerOrganizations/orgpatient.medical.com/peers/peerxinqiao.orgpatient.medical.com/tls:/etc/hyperledger/fabric/tls
      - ./data/peerxinqiao_orgpatient_data:/var/hyperledger/production # 备份peer节点数据
    ports:
      - 7051:7051
      - 7052:7052
      - 7053:7053
    extra_hosts:
      - "couchdb-xinqiao:172.20.29.30"
      - "orderer0.medical.com:172.20.29.30"
      - "orderer1.medical.com:172.20.29.31"
      - "orderer2.medical.com:172.20.29.32"

  cli-xinqiao:
    container_name: cli-xinqiao
    image: hyperledger/fabric-tools
    tty: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_ID=cli-xinqiao
      - CORE_PEER_ADDRESS=peerxinqiao.orgpatient.medical.com:7051
      - CORE_PEER_LOCALMSPID=OrgPatientMSP
      - CORE_PEER_TLS_ENABLED=true  # Enable TLS
      - CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orgpatient.medical.com/peers/peerxinqiao.orgpatient.medical.com/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orgpatient.medical.com/peers/peerxinqiao.orgpatient.medical.com/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orgpatient.medical.com/peers/peerxinqiao.orgpatient.medical.com/tls/ca.crt
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/orgpatient.medical.com/users/Admin@orgpatient.medical.com/msp
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    volumes:
      - /var/run/:/host/var/run/
      - ./chaincode/go/:/opt/gopath/src/github.com/hyperledger/fabric/kafka/chaincode/go   # 指定了链码位置
      - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
      - ./channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
    extra_hosts:
      - "orderer0.medical.com:172.20.29.30"
      - "orderer1.medical.com:172.20.29.31"
      - "orderer2.medical.com:172.20.29.32"
      - "peerxinqiao.orgpatient.medical.com:172.20.29.30"
      - "peerkunyi.orgpatient.medical.com:172.20.29.31"
      - "peerhuaxi.orgpatient.medical.com:172.20.29.32"
      - "peergovernment.orgthirdparty.medical.com:172.20.29.33"
      - "peermindray.orgthirdparty.medical.com:172.20.29.34"
      - "peercqu.orgthirdparty.medical.com:172.20.29.36"
      - "peerhealthcare.orgthirdparty.medical.com:172.20.29.37"



  # CouchDB-xinqiao
  couchdb-xinqiao:
    container_name: couchdb-xinqiao
    image: hyperledger/fabric-couchdb
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    volumes:
      - ./data/couchdb-xinqiao_data:/opt/couchdb/data
    ports:
      - 5984:5984

  # Zookeeper0
  zookeeper0:
    # 容器名称
    container_name: zookeeper0
    # 主机名称
    hostname: zookeeper0
    image: hyperledger/fabric-zookeeper
    restart: always
    environment:
      - ZOO_MY_ID=1
      - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888
    extra_hosts:
      - "zookeeper0:172.20.29.30"
      - "zookeeper1:172.20.29.31"
      - "zookeeper2:172.20.29.32"
      - "kafka0:172.20.29.30"
      - "kafka1:172.20.29.31"
      - "kafka2:172.20.29.32"
      - "kafka3:172.20.29.33"

  # Kafka0
  kafka0:
    container_name: kafka0
    hostname: kafka0
    image: hyperledger/fabric-kafka
    restart: always
    environment:
      - KAFKA_MESSAGE_MAX_BYTES=103809024 # 99 * 1024 * 1024 B
      - KAFKA_REPLICA_FETCH_MAX_BYTES=103809024 # 99 * 1024 * 1024 B
      - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false
      - KAFKA_BROKER_ID=1       # Broker ID
      - KAFKA_MIN_INSYNC_REPLICAS=2   # 最小备份数
      - KAFKA_DEFAULT_REPLICATION_FACTOR=3    # 备份因子
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181     # 其他的连接地址
      - KAFKA_LOG.DIRS=/opt/kafka/kafka-logs    # 日志目录
    volumes:
      - ./data/kafka0/kafka-logs:/opt/kafka/kafka-logs # 备份kafka、channel等信息
    ports:
      - 9092:9092
    extra_hosts:
      - "zookeeper0:172.20.29.30"
      - "zookeeper1:172.20.29.31"
      - "zookeeper2:172.20.29.32"
      - "kafka0:172.20.29.30"
      - "kafka1:172.20.29.31"
      - "kafka2:172.20.29.32"
      - "kafka3:172.20.29.33"

