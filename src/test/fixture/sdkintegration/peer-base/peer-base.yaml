version: '2'
services:
  peer-base:
    # 镜像名称
    image: hyperledger/fabric-peer${IMAGE_TAG_FABRIC}
    # 环境变量
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=sdkintegration_default
      # 设置日志级别!默认现在为DEBUG,生产环境改掉!
      # - CORE_LOGGING_LEVEL=ERROR
      - CORE_LOGGING_LEVEL=DEBUG
      # 开启为背书结点
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_CHANNELSERVICE_ENABLED=true
      - CORE_CHAINCODE_STARTUPTIMEOUT=10m  # only cause our vms are so slow!因为虚拟机太慢了..
      # The following setting skips the gossip handshake since we are are not doing mutual TLS
      # 设置MSP配置路径
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/msp
      # - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
      - CORE_PEER_PROFILE_ENABLED=false
      - CORE_PEER_TLS_ENABLED=${ORG_HYPERLEDGER_FABRIC_SDKTEST_INTEGRATIONTESTS_TLS}
      - CORE_PEER_TLS_CLIENTAUTHREQUIRED=${ORG_HYPERLEDGER_FABRIC_SDKTEST_INTEGRATIONTESTS_CLIENT_AUTH_REQUIRED}
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/msp/peer/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/msp/peer/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/msp/peer/tls/ca.crt
      # NOTE BOTH below should never be used in production.
      # 下面的配置在生产环境都不能使用
      - CORE_PEER_AUTHENTICATION_TIMEWINDOW=3600s
      - CORE_PEER_EVENTS_TIMEWINDOW=3600s
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
